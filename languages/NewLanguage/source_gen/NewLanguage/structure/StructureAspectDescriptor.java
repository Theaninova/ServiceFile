package NewLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAccept = createDescriptorForAccept();
  /*package*/ final ConceptDescriptor myConceptClose = createDescriptorForClose();
  /*package*/ final ConceptDescriptor myConceptComment = createDescriptorForComment();
  /*package*/ final ConceptDescriptor myConceptConnect = createDescriptorForConnect();
  /*package*/ final ConceptDescriptor myConceptCout = createDescriptorForCout();
  /*package*/ final ConceptDescriptor myConceptData = createDescriptorForData();
  /*package*/ final ConceptDescriptor myConceptExecute = createDescriptorForExecute();
  /*package*/ final ConceptDescriptor myConceptHexData = createDescriptorForHexData();
  /*package*/ final ConceptDescriptor myConceptListen = createDescriptorForListen();
  /*package*/ final ConceptDescriptor myConceptNetworkMock = createDescriptorForNetworkMock();
  /*package*/ final ConceptDescriptor myConceptNetworkMockClient = createDescriptorForNetworkMockClient();
  /*package*/ final ConceptDescriptor myConceptNetworkMockServer = createDescriptorForNetworkMockServer();
  /*package*/ final ConceptDescriptor myConceptProgram = createDescriptorForProgram();
  /*package*/ final ConceptDescriptor myConceptReceiveTransaction = createDescriptorForReceiveTransaction();
  /*package*/ final ConceptDescriptor myConceptSendTransaction = createDescriptorForSendTransaction();
  /*package*/ final ConceptDescriptor myConceptServiceScript = createDescriptorForServiceScript();
  /*package*/ final ConceptDescriptor myConceptStatement = createDescriptorForStatement();
  /*package*/ final ConceptDescriptor myConceptStop = createDescriptorForStop();
  /*package*/ final ConceptDescriptor myConceptTransaction = createDescriptorForTransaction();
  /*package*/ final ConceptDescriptor myConceptTransactionStatement = createDescriptorForTransactionStatement();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAccept, myConceptClose, myConceptComment, myConceptConnect, myConceptCout, myConceptData, myConceptExecute, myConceptHexData, myConceptListen, myConceptNetworkMock, myConceptNetworkMockClient, myConceptNetworkMockServer, myConceptProgram, myConceptReceiveTransaction, myConceptSendTransaction, myConceptServiceScript, myConceptStatement, myConceptStop, myConceptTransaction, myConceptTransactionStatement);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Accept:
        return myConceptAccept;
      case LanguageConceptSwitch.Close:
        return myConceptClose;
      case LanguageConceptSwitch.Comment:
        return myConceptComment;
      case LanguageConceptSwitch.Connect:
        return myConceptConnect;
      case LanguageConceptSwitch.Cout:
        return myConceptCout;
      case LanguageConceptSwitch.Data:
        return myConceptData;
      case LanguageConceptSwitch.Execute:
        return myConceptExecute;
      case LanguageConceptSwitch.HexData:
        return myConceptHexData;
      case LanguageConceptSwitch.Listen:
        return myConceptListen;
      case LanguageConceptSwitch.NetworkMock:
        return myConceptNetworkMock;
      case LanguageConceptSwitch.NetworkMockClient:
        return myConceptNetworkMockClient;
      case LanguageConceptSwitch.NetworkMockServer:
        return myConceptNetworkMockServer;
      case LanguageConceptSwitch.Program:
        return myConceptProgram;
      case LanguageConceptSwitch.ReceiveTransaction:
        return myConceptReceiveTransaction;
      case LanguageConceptSwitch.SendTransaction:
        return myConceptSendTransaction;
      case LanguageConceptSwitch.ServiceScript:
        return myConceptServiceScript;
      case LanguageConceptSwitch.Statement:
        return myConceptStatement;
      case LanguageConceptSwitch.Stop:
        return myConceptStop;
      case LanguageConceptSwitch.Transaction:
        return myConceptTransaction;
      case LanguageConceptSwitch.TransactionStatement:
        return myConceptTransactionStatement;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAccept() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Accept", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a0a52b61L);
    b.class_(false, false, false);
    b.super_("NewLanguage.structure.Statement", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f3903L);
    b.origin("r:4449cf50-309f-4a25-8e44-60dcb90dffa8(NewLanguage.structure)/813027313144114017");
    b.version(2);
    b.associate("server", 0xb487408a0a52b62L).target(0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f393eL).optional(false).origin("813027313144114018").done();
    b.alias("accept");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForClose() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Close", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a0a66b0eL);
    b.class_(false, false, false);
    b.super_("NewLanguage.structure.Statement", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f3903L);
    b.origin("r:4449cf50-309f-4a25-8e44-60dcb90dffa8(NewLanguage.structure)/813027313144195854");
    b.version(2);
    b.associate("program", 0xb487408a0a66b0fL).target(0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f3a3cL).optional(false).origin("813027313144195855").done();
    b.alias("close");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForComment() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Comment", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a0a794c7L);
    b.class_(false, false, false);
    b.super_("NewLanguage.structure.Statement", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f3903L);
    b.origin("r:4449cf50-309f-4a25-8e44-60dcb90dffa8(NewLanguage.structure)/813027313144272071");
    b.version(2);
    b.property("text", 0xb487408a0a794c8L).type(PrimitiveTypeId.STRING).origin("813027313144272072").done();
    b.alias("//");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForConnect() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Connect", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f39edL);
    b.class_(false, false, false);
    b.super_("NewLanguage.structure.Statement", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f3903L);
    b.origin("r:4449cf50-309f-4a25-8e44-60dcb90dffa8(NewLanguage.structure)/813027313143724525");
    b.version(2);
    b.associate("client", 0xb487408a09f39eeL).target(0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f396fL).optional(false).origin("813027313143724526").done();
    b.alias("connect");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForCout() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Cout", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a0a665adL);
    b.class_(false, false, false);
    b.super_("NewLanguage.structure.Statement", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f3903L);
    b.origin("r:4449cf50-309f-4a25-8e44-60dcb90dffa8(NewLanguage.structure)/813027313144194477");
    b.version(2);
    b.associate("program", 0xb487408a0a665aeL).target(0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f3a3cL).optional(false).origin("813027313144194478").done();
    b.aggregate("data", 0xb487408a0a665b0L).target(0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a0a1767aL).optional(false).ordered(true).multiple(false).origin("813027313144194480").done();
    b.alias("cout");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForData() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Data", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a0a1767aL);
    b.class_(false, true, false);
    b.origin("r:4449cf50-309f-4a25-8e44-60dcb90dffa8(NewLanguage.structure)/813027313143871098");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForExecute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Execute", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a0a40d98L);
    b.class_(false, false, false);
    b.super_("NewLanguage.structure.Statement", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f3903L);
    b.origin("r:4449cf50-309f-4a25-8e44-60dcb90dffa8(NewLanguage.structure)/813027313144040856");
    b.version(2);
    b.associate("program", 0xb487408a0a40d99L).target(0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f3a3cL).optional(false).origin("813027313144040857").done();
    b.alias("execute");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForHexData() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "HexData", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a0a1fc1fL);
    b.class_(false, false, false);
    b.super_("NewLanguage.structure.Data", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a0a1767aL);
    b.origin("r:4449cf50-309f-4a25-8e44-60dcb90dffa8(NewLanguage.structure)/813027313143905311");
    b.version(2);
    b.property("value", 0xb487408a0a1fc20L).type(PrimitiveTypeId.STRING).origin("813027313143905312").done();
    b.alias("HEX");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForListen() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Listen", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f39c7L);
    b.class_(false, false, false);
    b.super_("NewLanguage.structure.Statement", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f3903L);
    b.origin("r:4449cf50-309f-4a25-8e44-60dcb90dffa8(NewLanguage.structure)/813027313143724487");
    b.version(2);
    b.associate("server", 0xb487408a09f39c8L).target(0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f393eL).optional(false).origin("813027313143724488").done();
    b.alias("listen");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNetworkMock() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "NetworkMock", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f393bL);
    b.class_(false, true, false);
    b.super_("NewLanguage.structure.Statement", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f3903L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:4449cf50-309f-4a25-8e44-60dcb90dffa8(NewLanguage.structure)/813027313143724347");
    b.version(2);
    b.property("id", 0xb487408a09f393cL).type(PrimitiveTypeId.INTEGER).origin("813027313143724348").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNetworkMockClient() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "NetworkMockClient", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f396fL);
    b.class_(false, false, false);
    b.super_("NewLanguage.structure.NetworkMock", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f393bL);
    b.origin("r:4449cf50-309f-4a25-8e44-60dcb90dffa8(NewLanguage.structure)/813027313143724399");
    b.version(2);
    b.property("address", 0xb487408a09f3970L).type(PrimitiveTypeId.STRING).origin("813027313143724400").done();
    b.property("port", 0xb487408a09f3972L).type(PrimitiveTypeId.INTEGER).origin("813027313143724402").done();
    b.alias("client");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForNetworkMockServer() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "NetworkMockServer", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f393eL);
    b.class_(false, false, false);
    b.super_("NewLanguage.structure.NetworkMock", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f393bL);
    b.origin("r:4449cf50-309f-4a25-8e44-60dcb90dffa8(NewLanguage.structure)/813027313143724350");
    b.version(2);
    b.property("port", 0xb487408a09f393fL).type(PrimitiveTypeId.INTEGER).origin("813027313143724351").done();
    b.alias("server");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProgram() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Program", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f3a3cL);
    b.class_(false, false, false);
    b.super_("NewLanguage.structure.Statement", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f3903L);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:4449cf50-309f-4a25-8e44-60dcb90dffa8(NewLanguage.structure)/813027313143724604");
    b.version(2);
    b.property("address", 0xb487408a09f3a3dL).type(PrimitiveTypeId.STRING).origin("813027313143724605").done();
    b.property("args", 0xb487408a09f3a3fL).type(PrimitiveTypeId.STRING).origin("813027313143724607").done();
    b.alias("program");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReceiveTransaction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "ReceiveTransaction", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a0a17644L);
    b.class_(false, false, false);
    b.super_("NewLanguage.structure.Transaction", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a0a17642L);
    b.origin("r:4449cf50-309f-4a25-8e44-60dcb90dffa8(NewLanguage.structure)/813027313143871044");
    b.version(2);
    b.alias("receive");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForSendTransaction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "SendTransaction", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a0a17643L);
    b.class_(false, false, false);
    b.super_("NewLanguage.structure.Transaction", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a0a17642L);
    b.origin("r:4449cf50-309f-4a25-8e44-60dcb90dffa8(NewLanguage.structure)/813027313143871043");
    b.version(2);
    b.alias("send");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForServiceScript() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "ServiceScript", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f3902L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:4449cf50-309f-4a25-8e44-60dcb90dffa8(NewLanguage.structure)/813027313143724290");
    b.version(2);
    b.property("description", 0xb487408a09f3906L).type(PrimitiveTypeId.STRING).origin("813027313143724294").done();
    b.aggregate("statements", 0xb487408a09f3908L).target(0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f3903L).optional(true).ordered(true).multiple(true).origin("813027313143724296").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Statement", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f3903L);
    b.class_(false, true, false);
    b.origin("r:4449cf50-309f-4a25-8e44-60dcb90dffa8(NewLanguage.structure)/813027313143724291");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForStop() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Stop", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f3a16L);
    b.class_(false, false, false);
    b.super_("NewLanguage.structure.Statement", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f3903L);
    b.origin("r:4449cf50-309f-4a25-8e44-60dcb90dffa8(NewLanguage.structure)/813027313143724566");
    b.version(2);
    b.associate("network_mock", 0xb487408a09f3a17L).target(0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f393bL).optional(false).origin("813027313143724567").done();
    b.alias("stop");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTransaction() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "Transaction", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a0a17642L);
    b.class_(false, true, false);
    b.origin("r:4449cf50-309f-4a25-8e44-60dcb90dffa8(NewLanguage.structure)/813027313143871042");
    b.version(2);
    b.aggregate("data", 0xb487408a0a176ddL).target(0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a0a1767aL).optional(false).ordered(true).multiple(false).origin("813027313143871197").done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTransactionStatement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("NewLanguage", "TransactionStatement", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a0a17645L);
    b.class_(false, false, false);
    b.super_("NewLanguage.structure.Statement", 0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f3903L);
    b.origin("r:4449cf50-309f-4a25-8e44-60dcb90dffa8(NewLanguage.structure)/813027313143871045");
    b.version(2);
    b.associate("network_mock", 0xb487408a0a17646L).target(0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a09f393bL).optional(false).origin("813027313143871046").done();
    b.aggregate("transactions", 0xb487408a0a17648L).target(0xbccde9bf61a047d3L, 0xac545528183d161bL, 0xb487408a0a17642L).optional(true).ordered(true).multiple(true).origin("813027313143871048").done();
    b.alias("with");
    return b.create();
  }
}
