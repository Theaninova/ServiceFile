package NewLanguage.structure;

/*Generated by MPS */

import jetbrains.mps.lang.smodel.LanguageConceptIndex;
import jetbrains.mps.lang.smodel.LanguageConceptIndexBuilder;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import org.jetbrains.mps.openapi.language.SAbstractConcept;

public final class LanguageConceptSwitch {
  private final LanguageConceptIndex myIndex;
  public static final int Accept = 0;
  public static final int Close = 1;
  public static final int Comment = 2;
  public static final int Connect = 3;
  public static final int Cout = 4;
  public static final int Data = 5;
  public static final int Execute = 6;
  public static final int HexData = 7;
  public static final int Listen = 8;
  public static final int NetworkMock = 9;
  public static final int NetworkMockClient = 10;
  public static final int NetworkMockServer = 11;
  public static final int Program = 12;
  public static final int ReceiveTransaction = 13;
  public static final int SendTransaction = 14;
  public static final int ServiceScript = 15;
  public static final int Statement = 16;
  public static final int Stop = 17;
  public static final int Transaction = 18;
  public static final int TransactionStatement = 19;

  public LanguageConceptSwitch() {
    LanguageConceptIndexBuilder builder = new LanguageConceptIndexBuilder(0xbccde9bf61a047d3L, 0xac545528183d161bL);
    builder.put(0xb487408a0a52b61L, Accept);
    builder.put(0xb487408a0a66b0eL, Close);
    builder.put(0xb487408a0a794c7L, Comment);
    builder.put(0xb487408a09f39edL, Connect);
    builder.put(0xb487408a0a665adL, Cout);
    builder.put(0xb487408a0a1767aL, Data);
    builder.put(0xb487408a0a40d98L, Execute);
    builder.put(0xb487408a0a1fc1fL, HexData);
    builder.put(0xb487408a09f39c7L, Listen);
    builder.put(0xb487408a09f393bL, NetworkMock);
    builder.put(0xb487408a09f396fL, NetworkMockClient);
    builder.put(0xb487408a09f393eL, NetworkMockServer);
    builder.put(0xb487408a09f3a3cL, Program);
    builder.put(0xb487408a0a17644L, ReceiveTransaction);
    builder.put(0xb487408a0a17643L, SendTransaction);
    builder.put(0xb487408a09f3902L, ServiceScript);
    builder.put(0xb487408a09f3903L, Statement);
    builder.put(0xb487408a09f3a16L, Stop);
    builder.put(0xb487408a0a17642L, Transaction);
    builder.put(0xb487408a0a17645L, TransactionStatement);
    myIndex = builder.seal();
  }

  /*package*/ int index(SConceptId cid) {
    return myIndex.index(cid);
  }

  public int index(SAbstractConcept concept) {
    return myIndex.index(concept);
  }
}
